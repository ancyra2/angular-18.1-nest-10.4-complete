services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    command: ng serve --host ${FRONTEND_HOST} --port ${FRONTEND_PORT}
    networks:
      - my-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev
    networks:
      - my-network

networks:
  my-network:
    driver: bridge


# Dockerizing for development
# docker-compose --env-file .env.dev -f docker-compose.dev.yml up --build
